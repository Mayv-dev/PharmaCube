# Code taken from https://www.waveshare.com/wiki/Pico-Audio#Demo_Codes

import utime
from rp2 import PIO, asm_pio, StateMachine
from machine import Pin

PIN_DATA = 26
PIN_BCK = 27
PIN_LRCK = PIN_BCK + 1
FREQ = 44100

sine_wave_table = [
 0xc3cd, 0xc894, 0xcd5c, 0xd221, 0xd6e5, 0xdba6, 0xe063, 0xe51b, 0xe9cf, 0xee7c, 0xf323, 0xf7c3, 0xfc5a, 0x100e9, 0x1056f, 0x109ea,
0x10e5b, 0x112c0, 0x11719, 0x11b65, 0x11fa3, 0x123d4, 0x127f5, 0x12c07, 0x13009, 0x133fb, 0x137db, 0x13ba9, 0x13f65, 0x1430d, 0x146a2, 0x14a23,
0x14d8f, 0x150e6, 0x15427, 0x15752, 0x15a66, 0x15d63, 0x16048, 0x16315, 0x165ca, 0x16865, 0x16ae7, 0x16d50, 0x16f9e, 0x171d2, 0x173eb, 0x175e8,
0x177cb, 0x17991, 0x17b3c, 0x17cca, 0x17e3b, 0x17f90, 0x180c8, 0x181e3, 0x182e1, 0x183c1, 0x18483, 0x18528, 0x185af, 0x18618, 0x18663, 0x18690,
0x1869f, 0x18690, 0x18663, 0x18618, 0x185af, 0x18528, 0x18483, 0x183c1, 0x182e1, 0x181e3, 0x180c8, 0x17f90, 0x17e3b, 0x17cca, 0x17b3c, 0x17991,
0x177cb, 0x175e8, 0x173eb, 0x171d2, 0x16f9e, 0x16d50, 0x16ae7, 0x16865, 0x165ca, 0x16315, 0x16048, 0x15d63, 0x15a66, 0x15752, 0x15427, 0x150e6,
0x14d8f, 0x14a23, 0x146a2, 0x1430d, 0x13f65, 0x13ba9, 0x137db, 0x133fb, 0x13009, 0x12c07, 0x127f5, 0x123d4, 0x11fa3, 0x11b65, 0x11719, 0x112c0,
0x10e5b, 0x109ea, 0x1056f, 0x100e9, 0xfc5a, 0xf7c3, 0xf323, 0xee7c, 0xe9cf, 0xe51b, 0xe063, 0xdba6, 0xd6e5, 0xd221, 0xcd5c, 0xc894,
0xc3cd, 0xbf05, 0xba3d, 0xb578, 0xb0b4, 0xabf3, 0xa736, 0xa27e, 0x9dca, 0x991d, 0x9476, 0x8fd6, 0x8b3f, 0x86b0, 0x822a, 0x7daf,
0x793e, 0x74d9, 0x7080, 0x6c34, 0x67f6, 0x63c5, 0x5fa4, 0x5b92, 0x5790, 0x539e, 0x4fbe, 0x4bf0, 0x4834, 0x448c, 0x40f7, 0x3d76,
0x3a0a, 0x36b3, 0x3372, 0x3047, 0x2d33, 0x2a36, 0x2751, 0x2484, 0x21cf, 0x1f34, 0x1cb2, 0x1a49, 0x17fb, 0x15c7, 0x13ae, 0x11b1,
0xfce, 0xe08, 0xc5d, 0xacf, 0x95e, 0x809, 0x6d1, 0x5b6, 0x4b8, 0x3d8, 0x316, 0x271, 0x1ea, 0x181, 0x136, 0x109,
0xfa, 0x109, 0x136, 0x181, 0x1ea, 0x271, 0x316, 0x3d8, 0x4b8, 0x5b6, 0x6d1, 0x809, 0x95e, 0xacf, 0xc5d, 0xe08,
0xfce, 0x11b1, 0x13ae, 0x15c7, 0x17fb, 0x1a49, 0x1cb2, 0x1f34, 0x21cf, 0x2484, 0x2751, 0x2a36, 0x2d33, 0x3047, 0x3372, 0x36b3,
0x3a0a, 0x3d76, 0x40f7, 0x448c, 0x4834, 0x4bf0, 0x4fbe, 0x539e, 0x5790, 0x5b92, 0x5fa4, 0x63c5, 0x67f6, 0x6c34, 0x7080, 0x74d9,
0x793e, 0x7daf, 0x822a, 0x86b0, 0x8b3f, 0x8fd6, 0x9476, 0x991d, 0x9dca, 0xa27e, 0xa736, 0xabf3, 0xb0b4, 0xb578, 0xba3d, 0xbf05]

sine_wave_table_2 = [0x782f,0x7b53,0x7e77,0x819a,0x84bb,0x87da,0x8af7,0x8e11,0x9128,0x943a,0x9749,0x9a53,0x9d57,0xa056,0xa34e,0xa640,0xa92b,0xac0e,0xaee9,0xb1bc,0xb485,0xb746,0xb9fd,0xbcaa,0xbf4c,0xc1e3,0xc46f,0xc6ef,0xc962,0xcbca,0xce24,0xd072,0xd2b1,0xd4e3,0xd706,0xd91b,0xdb21,0xdd17,0xdefe,0xe0d5,0xe29c,0xe453,0xe5f9,0xe78e,0xe911,0xea84,0xebe4,0xed33,0xee70,0xef9b,0xf0b3,0xf1b9,0xf2ac,0xf38c,0xf458,0xf512,0xf5b9,0xf64c,0xf6cc,0xf738,0xf791,0xf7d6,0xf807,0xf825,0xf82e,0xf825,0xf807,0xf7d6,0xf791,0xf738,0xf6cc,0xf64c,0xf5b9,0xf512,0xf459,0xf38c,0xf2ac,0xf1b9,0xf0b3,0xef9b,0xee70,0xed33,0xebe4,0xea84,0xe911,0xe78e,0xe5f9,0xe453,0xe29c,0xe0d5,0xdefe,0xdd17,0xdb21,0xd91b,0xd706,0xd4e3,0xd2b1,0xd072,0xce24,0xcbca,0xc962,0xc6ef,0xc46f,0xc1e3,0xbf4c,0xbcaa,0xb9fd,0xb746,0xb485,0xb1bc,0xaee9,0xac0e,0xa92b,0xa640,0xa34e,0xa056,0x9d57,0x9a52,0x9749,0x943a,0x9128,0x8e11,0x8af7,0x87da,0x84bb,0x8199,0x7e77,0x7b53,0x782f,0x750b,0x71e7,0x6ec4,0x6ba3,0x6884,0x6567,0x624d,0x5f36,0x5c24,0x5915,0x560b,0x5307,0x5008,0x4d10,0x4a1e,0x4733,0x4450,0x4175,0x3ea2,0x3bd8,0x3918,0x3661,0x33b4,0x3112,0x2e7b,0x2bef,0x296f,0x26fb,0x2494,0x223a,0x1fec,0x1dad,0x1b7b,0x1958,0x1743,0x153d,0x1347,0x1160,0xf89,0xdc2,0xc0b,0xa65,0x8d0,0x74d,0x5da,0x479,0x32b,0x1ee,0xc3,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xc3,0x1ee,0x32b,0x47a,0x5da,0x74d,0x8d1,0xa66,0xc0b,0xdc2,0xf89,0x1160,0x1347,0x153e,0x1743,0x1958,0x1b7b,0x1dad,0x1fed,0x223a,0x2494,0x26fc,0x2970,0x9749,0x2e7b,0x3113,0x33b5,0x3661,0x3918,0x3bd9,0x3ea3,0x4175,0x4451,0x4734,0x4a1e,0x4d10,0x5009,0x5307,0x560c,0x5915,0x5c24,0x5f37,0x624d,0x6567,0x6884,0x6ba4,0x6ec5,0x71e8,0x750b]


@asm_pio(out_init=PIO.OUT_LOW, sideset_init=(PIO.OUT_LOW, PIO.OUT_LOW), autopull=True)
def Audio_PIO():
    set(x, 14)            .side(0b11)
    
    label("bitloop1")         
    out(pins, 1)          .side(0b10)
    jmp(x_dec,"bitloop1") .side(0b11)
    out(pins, 1)          .side(0b00)
    set(x, 14)            .side(0b01)
    
    label("bitloop0")  
    out(pins, 1)          .side(0b00)
    jmp(x_dec,"bitloop0") .side(0b01) 
    out(pins, 1)          .side(0b10)
    
    

class Audio:
    def __init__(self,smID = 0):
        
        self.PIN_DATA = Pin(PIN_DATA)
        self.PIN_BCK = Pin(PIN_BCK)
        self.PIN_LRCK = Pin(PIN_LRCK)
        self.smID = smID
        
        self.PIN_BCK.init(Pin.OUT)
        self.PIN_DATA.init(Pin.OUT)
        self.PIN_LRCK.init(Pin.OUT)
        # Create a state machine with the serial number self.smID
        self.sm= StateMachine(self.smID) 
    
    def write(self, time, table):
        if table == 1:
            table = sine_wave_table
        else:
            table = sine_wave_table_2
        #start state machine
        self.sm.init(
            Audio_PIO,
            freq=FREQ * 64,
            out_base = self.PIN_DATA,
            set_base=self.PIN_DATA,
            jmp_pin = self.PIN_DATA,
            sideset_base=self.PIN_BCK,
#             out_shiftdir=PIO.SHIFT_RIGHT
            )
 
        self.sm.active(1)
        
        buf = [0xffffffff] * len(table)
        for i in range(len(table)):
            buf[i] = (table[i] - 0x7fff) * 65536 + table[i] - 0x7fff
    
        for t in range(time):
            for i in range(len(table)):
                self.sm.put(buf[i])

